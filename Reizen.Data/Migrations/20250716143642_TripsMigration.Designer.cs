// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reizen.Data.Repositories;

#nullable disable

namespace Reizen.Data.Migrations
{
    [DbContext(typeof(ReizenContext))]
    [Migration("20250716143642_TripsMigration")]
    partial class TripsMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Reizen.Data.Models.BookingDAL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AnnulatieVerzekering")
                        .HasColumnType("bit")
                        .HasColumnName("annulatieVerzekering");

                    b.Property<DateOnly>("BookedOnDate")
                        .HasColumnType("date")
                        .HasColumnName("geboektOp");

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("klantid");

                    b.Property<int?>("NumberOfAdults")
                        .HasColumnType("int")
                        .HasColumnName("numberOfAdults");

                    b.Property<int?>("NumberOfMinors")
                        .HasColumnType("int")
                        .HasColumnName("numberOfMinors");

                    b.Property<int>("TripId")
                        .HasColumnType("int")
                        .HasColumnName("tripid");

                    b.HasKey("Id")
                        .HasName("PK__bookings__3213E83FE0274BF8");

                    b.HasIndex("ClientId");

                    b.HasIndex("TripId");

                    b.ToTable("bookings", (string)null);
                });

            modelBuilder.Entity("Reizen.Data.Models.ClientDAL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("familyname");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("firstname");

                    b.Property<int>("ResidenceId")
                        .HasColumnType("int")
                        .HasColumnName("residenceid");

                    b.HasKey("Id")
                        .HasName("PK__clients__3213E83F8BE1A164");

                    b.HasIndex("ResidenceId");

                    b.ToTable("clients", (string)null);
                });

            modelBuilder.Entity("Reizen.Data.Models.ContinentDAL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__continents__3213E83FCC03D392");

                    b.HasIndex(new[] { "Name" }, "UQ__continents__72E1CD7890D795ED")
                        .IsUnique();

                    b.ToTable("continents", (string)null);
                });

            modelBuilder.Entity("Reizen.Data.Models.CountryDAL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Continentid")
                        .HasColumnType("int")
                        .HasColumnName("Continentid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Countries__3213E83FF994C39E");

                    b.HasIndex("Continentid");

                    b.HasIndex(new[] { "Name" }, "UQ__Countries__72E1CD78CA87044C")
                        .IsUnique();

                    b.ToTable("countries", (string)null);
                });

            modelBuilder.Entity("Reizen.Data.Models.DestinationDAL", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("code")
                        .IsFixedLength();

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("PlaceName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("placename");

                    b.HasKey("Code")
                        .HasName("PK__Destinations__357D4CF8ABF0313B");

                    b.HasIndex("CountryId");

                    b.ToTable("destinations", (string)null);
                });

            modelBuilder.Entity("Reizen.Data.Models.ResidenceDAL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int")
                        .HasColumnName("postalcode");

                    b.HasKey("Id")
                        .HasName("PK__residences__3213E83F42709BCC");

                    b.ToTable("residences", (string)null);
                });

            modelBuilder.Entity("Reizen.Data.Models.TripDAL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateOfDeparture")
                        .HasColumnType("date")
                        .HasColumnName("dateofdeparture");

                    b.Property<string>("DestinationCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("DestinationCode")
                        .IsFixedLength();

                    b.Property<int>("NumberOfAdults")
                        .HasColumnType("int")
                        .HasColumnName("numberOfAdults");

                    b.Property<int>("NumberOfDays")
                        .HasColumnType("int")
                        .HasColumnName("numberOfDays");

                    b.Property<int>("NumberOfMinors")
                        .HasColumnType("int")
                        .HasColumnName("numberOfMinors");

                    b.Property<decimal>("PricePerPerson")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("pricePerPerson");

                    b.HasKey("Id")
                        .HasName("PK__trips__3213E83F18B8A173");

                    b.HasIndex("DestinationCode");

                    b.ToTable("trips", (string)null);
                });

            modelBuilder.Entity("Reizen.Data.Models.BookingDAL", b =>
                {
                    b.HasOne("Reizen.Data.Models.ClientDAL", "Client")
                        .WithMany("Bookings")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("bookings_clients");

                    b.HasOne("Reizen.Data.Models.TripDAL", "Trip")
                        .WithMany("Bookings")
                        .HasForeignKey("TripId")
                        .IsRequired()
                        .HasConstraintName("bookings_trips");

                    b.Navigation("Client");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("Reizen.Data.Models.ClientDAL", b =>
                {
                    b.HasOne("Reizen.Data.Models.ResidenceDAL", "Residence")
                        .WithMany("Clients")
                        .HasForeignKey("ResidenceId")
                        .IsRequired()
                        .HasConstraintName("clients_residences");

                    b.Navigation("Residence");
                });

            modelBuilder.Entity("Reizen.Data.Models.CountryDAL", b =>
                {
                    b.HasOne("Reizen.Data.Models.ContinentDAL", "Continent")
                        .WithMany("Countries")
                        .HasForeignKey("Continentid")
                        .IsRequired()
                        .HasConstraintName("Countries_continents");

                    b.Navigation("Continent");
                });

            modelBuilder.Entity("Reizen.Data.Models.DestinationDAL", b =>
                {
                    b.HasOne("Reizen.Data.Models.CountryDAL", "Country")
                        .WithMany("Destinations")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("Destinations_Countries");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Reizen.Data.Models.TripDAL", b =>
                {
                    b.HasOne("Reizen.Data.Models.DestinationDAL", "Destination")
                        .WithMany("Trips")
                        .HasForeignKey("DestinationCode")
                        .IsRequired()
                        .HasConstraintName("trips_Destinations");

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("Reizen.Data.Models.ClientDAL", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Reizen.Data.Models.ContinentDAL", b =>
                {
                    b.Navigation("Countries");
                });

            modelBuilder.Entity("Reizen.Data.Models.CountryDAL", b =>
                {
                    b.Navigation("Destinations");
                });

            modelBuilder.Entity("Reizen.Data.Models.DestinationDAL", b =>
                {
                    b.Navigation("Trips");
                });

            modelBuilder.Entity("Reizen.Data.Models.ResidenceDAL", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("Reizen.Data.Models.TripDAL", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
