// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reizen.Data.Repositories;

#nullable disable

namespace Reizen.Data.Migrations
{
    [DbContext(typeof(ReizenContext))]
    [Migration("20250318120153_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Reizen.Data.Bestemmingen", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("code")
                        .IsFixedLength();

                    b.Property<int>("Landid")
                        .HasColumnType("int")
                        .HasColumnName("landid");

                    b.Property<string>("Plaats")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("plaats");

                    b.HasKey("Code")
                        .HasName("PK__bestemmingen__357D4CF8ABF0313B");

                    b.HasIndex("Landid");

                    b.ToTable("bestemmingen", (string)null);
                });

            modelBuilder.Entity("Reizen.Data.Boekingen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AantalKinderen")
                        .HasColumnType("int")
                        .HasColumnName("aantalKinderen");

                    b.Property<int?>("AantalVolwassenen")
                        .HasColumnType("int")
                        .HasColumnName("aantalVolwassenen");

                    b.Property<bool>("AnnulatieVerzekering")
                        .HasColumnType("bit")
                        .HasColumnName("annulatieVerzekering");

                    b.Property<DateOnly>("GeboektOp")
                        .HasColumnType("date")
                        .HasColumnName("geboektOp");

                    b.Property<int>("Klantid")
                        .HasColumnType("int")
                        .HasColumnName("klantid");

                    b.Property<int>("Reisid")
                        .HasColumnType("int")
                        .HasColumnName("reisid");

                    b.HasKey("Id")
                        .HasName("PK__boekingen__3213E83FE0274BF8");

                    b.HasIndex("Klantid");

                    b.HasIndex("Reisid");

                    b.ToTable("boekingen", (string)null);
                });

            modelBuilder.Entity("Reizen.Data.Klanten", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("adres");

                    b.Property<string>("Familienaam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("familienaam");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("voornaam");

                    b.Property<int>("Woonplaatsid")
                        .HasColumnType("int")
                        .HasColumnName("woonplaatsid");

                    b.HasKey("Id")
                        .HasName("PK__klanten__3213E83F8BE1A164");

                    b.HasIndex("Woonplaatsid");

                    b.ToTable("klanten", (string)null);
                });

            modelBuilder.Entity("Reizen.Data.Landen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("naam");

                    b.Property<int>("Werelddeelid")
                        .HasColumnType("int")
                        .HasColumnName("werelddeelid");

                    b.HasKey("Id")
                        .HasName("PK__landen__3213E83FF994C39E");

                    b.HasIndex("Werelddeelid");

                    b.HasIndex(new[] { "Naam" }, "UQ__landen__72E1CD78CA87044C")
                        .IsUnique();

                    b.ToTable("landen", (string)null);
                });

            modelBuilder.Entity("Reizen.Data.Reizen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AantalDagen")
                        .HasColumnType("int")
                        .HasColumnName("aantalDagen");

                    b.Property<int>("AantalKinderen")
                        .HasColumnType("int")
                        .HasColumnName("aantalKinderen");

                    b.Property<int>("AantalVolwassenen")
                        .HasColumnType("int")
                        .HasColumnName("aantalVolwassenen");

                    b.Property<string>("Bestemmingscode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("bestemmingscode")
                        .IsFixedLength();

                    b.Property<decimal>("PrijsPerPersoon")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("prijsPerPersoon");

                    b.Property<DateOnly>("Vertrek")
                        .HasColumnType("date")
                        .HasColumnName("vertrek");

                    b.HasKey("Id")
                        .HasName("PK__reizen__3213E83F18B8A173");

                    b.HasIndex("Bestemmingscode");

                    b.ToTable("reizen", (string)null);
                });

            modelBuilder.Entity("Reizen.Data.Werelddelen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("naam");

                    b.HasKey("Id")
                        .HasName("PK__werelddelen__3213E83FCC03D392");

                    b.HasIndex(new[] { "Naam" }, "UQ__wereldde__72E1CD7890D795ED")
                        .IsUnique();

                    b.ToTable("werelddelen", (string)null);
                });

            modelBuilder.Entity("Reizen.Data.Woonplaatsen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("naam");

                    b.Property<int>("Postcode")
                        .HasColumnType("int")
                        .HasColumnName("postcode");

                    b.HasKey("Id")
                        .HasName("PK__woonplaa__3213E83F42709BCC");

                    b.ToTable("woonplaatsen", (string)null);
                });

            modelBuilder.Entity("Reizen.Data.Bestemmingen", b =>
                {
                    b.HasOne("Reizen.Data.Landen", "Land")
                        .WithMany("Bestemmingens")
                        .HasForeignKey("Landid")
                        .IsRequired()
                        .HasConstraintName("bestemmingen_landen");

                    b.Navigation("Land");
                });

            modelBuilder.Entity("Reizen.Data.Boekingen", b =>
                {
                    b.HasOne("Reizen.Data.Klanten", "Klant")
                        .WithMany("Boekingens")
                        .HasForeignKey("Klantid")
                        .IsRequired()
                        .HasConstraintName("boekingen_klanten");

                    b.HasOne("Reizen.Data.Reizen", "Reis")
                        .WithMany("Boekingens")
                        .HasForeignKey("Reisid")
                        .IsRequired()
                        .HasConstraintName("boekingen_reizen");

                    b.Navigation("Klant");

                    b.Navigation("Reis");
                });

            modelBuilder.Entity("Reizen.Data.Klanten", b =>
                {
                    b.HasOne("Reizen.Data.Woonplaatsen", "Woonplaats")
                        .WithMany("Klantens")
                        .HasForeignKey("Woonplaatsid")
                        .IsRequired()
                        .HasConstraintName("klanten_woonplaatsen");

                    b.Navigation("Woonplaats");
                });

            modelBuilder.Entity("Reizen.Data.Landen", b =>
                {
                    b.HasOne("Reizen.Data.Werelddelen", "Werelddeel")
                        .WithMany("Landens")
                        .HasForeignKey("Werelddeelid")
                        .IsRequired()
                        .HasConstraintName("landen_werelddelen");

                    b.Navigation("Werelddeel");
                });

            modelBuilder.Entity("Reizen.Data.Reizen", b =>
                {
                    b.HasOne("Reizen.Data.Bestemmingen", "BestemmingscodeNavigation")
                        .WithMany("Reizens")
                        .HasForeignKey("Bestemmingscode")
                        .IsRequired()
                        .HasConstraintName("reizen_bestemmingen");

                    b.Navigation("BestemmingscodeNavigation");
                });

            modelBuilder.Entity("Reizen.Data.Bestemmingen", b =>
                {
                    b.Navigation("Reizens");
                });

            modelBuilder.Entity("Reizen.Data.Klanten", b =>
                {
                    b.Navigation("Boekingens");
                });

            modelBuilder.Entity("Reizen.Data.Landen", b =>
                {
                    b.Navigation("Bestemmingens");
                });

            modelBuilder.Entity("Reizen.Data.Reizen", b =>
                {
                    b.Navigation("Boekingens");
                });

            modelBuilder.Entity("Reizen.Data.Werelddelen", b =>
                {
                    b.Navigation("Landens");
                });

            modelBuilder.Entity("Reizen.Data.Woonplaatsen", b =>
                {
                    b.Navigation("Klantens");
                });
#pragma warning restore 612, 618
        }
    }
}
