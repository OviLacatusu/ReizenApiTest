@using Reizen.Domain.DTOs
@using Microsoft.AspNetCore.Authorization

@page "/landen/{Landnaam}"

@inject IHttpClientFactory httpFactory

@attribute [Authorize]

<h3>Land</h3>

<img src="/vlaggen/@(Landnaam).png" />

@if (bestemmingen != null)
{
    <ul>
        @foreach (var bestemming in bestemmingen)
        {
            <li><a href="/bestemmingen/@bestemming.Code">@bestemming.Plaats </a></li>
        }
    </ul>
}
else
{
    <p>Waiting for data...</p>
}
@if (Error != null)
{
    <div class="alert alert-danger">@Error</div>
}

@code {
    [Parameter]
    public string? Landnaam { get; set; }

    private string Error { get; set; }

    private IEnumerable<BestemmingDTO>? bestemmingen;

    protected override async Task OnInitializedAsync()
    {
        if (Landnaam != null)
        {
            using var httpClient = httpFactory.CreateClient();
            var result = await httpClient.GetAsync($"api/bestemmingen/{Landnaam}");

            if (result.IsSuccessStatusCode)
            {
                bestemmingen = await result.Content.ReadFromJsonAsync<IEnumerable<BestemmingDTO>>();
            }
            else
            {
                var content = await result.Content.ReadAsStringAsync();
                if (!String.IsNullOrEmpty(content))
                {
                    Error = content;
                }
                else
                {
                    Error = "Something went wrong.";
                }
            }
        }
    }
}
