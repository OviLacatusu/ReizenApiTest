@using Reizen.CommonClasses.DTOs
@using Microsoft.AspNetCore.Authorization

@page "/{NaamLand}/bestemmingen"

@inject IHttpClientFactory httpFactory

@attribute [Authorize]

<h2>Choose the destination:</h2>

<img src="/vlaggen/@(NaamLand).png" />

@if (Bestemmingen != null)
{
    <ul>
        @foreach (var bestemming in Bestemmingen)
        {
            <li><a href="/@bestemming.Code/reizen">@bestemming.Plaats </a></li>
        }
    </ul>
}
else
{
    <p>Waiting for data...</p>
}
@if (!String.IsNullOrEmpty(Error))
{
    <div class="alert alert-danger">@Error</div>
}

@code {
    [Parameter]
    public string? NaamLand { get; set; }

    private string Error { get; set; }

    private IEnumerable<BestemmingDTO>? Bestemmingen;

    protected override async Task OnInitializedAsync()
    {
        if (!String.IsNullOrEmpty(NaamLand))
        {
            using var httpClient = httpFactory.CreateClient();

            var result = await HelperRequest.SendGetRequestAndParseJsonAsync<IEnumerable<BestemmingDTO>>($"api/bestemmingen/{NaamLand}", httpClient);
            if (result.IsSuccessful)
            {
                Bestemmingen = result.Value;
            }
            else
            {
                Error = result.Error;
            }
        }
    }
}
