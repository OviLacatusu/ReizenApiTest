@using Reizen.CommonClasses.DTOs
@using Microsoft.AspNetCore.Authorization

@page "/landenwerelddeel/{Naam}"

@inject IHttpClientFactory _httpFactory
@inject ILogger<LandenWerelddeel> _logger

@* @attribute [Authorize] *@


<div class="container">
    <h2>Choose the country:</h2>
@if (Landen != null)
{
    <ul>
        @foreach (var land in Landen)
        {
            <li><a href="/@land.Naam/bestemmingen">@land.Naam </a></li>
        }
    </ul>
}
else
{
    <p>Waiting for data...</p>
}
@if (!String.IsNullOrEmpty(Error))
{
    <div class="alert alert-danger">@Error</div>
}
</div>
@code {
    [Parameter]
    public string? Naam { get; set; }

    private IEnumerable<LandDTO>? Landen;

    private string? Error { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!String.IsNullOrEmpty(Naam))
        {
            using var httpClient = _httpFactory.CreateClient();

            var result = await HelperRequest.SendGetRequestAndParseJsonAsync<IEnumerable<LandDTO>>($"api/landen/{Naam}", httpClient);
            if (result.IsSuccessful)
            {
                Landen = result.Value;
            }
            else
            {
                Error = result.Error;
            }
        }
    }
}
