@using Microsoft.AspNetCore.Authorization
@using Reizen.Domain.DTOs

@page "/Home"

@inject IHttpClientFactory _httpFactory
@inject ILogger<Home> _logger;

@attribute [Authorize]
<AuthorizeView>
    <div class="container">
    <PageTitle>Werelddelen</PageTitle>

    <h2>Choose the continent:</h2>
    @if(Werelddelen != null)
        {
            <ul>
                @foreach (var werelddeel in Werelddelen)   
                {
                    @* _logger.LogInformation(context?.User?.Identity?.Name); *@
                    <li><a href="/werelddelen/@werelddeel.Naam">@werelddeel.Naam  </a></li>
                }
            </ul>
        } 
        else 
        {
            <p>Waiting for data...</p>
        }
        @if(!String.IsNullOrEmpty(Error))
        {
            <div class="alert alert-danger">@Error</div>
        }
    </div>
</AuthorizeView> 
@code 
{
    private string Error { get; set; }

    private IEnumerable<WerelddeelDTO>? Werelddelen;

    protected override async Task OnInitializedAsync( )
    {
        using var httpClient = _httpFactory.CreateClient();
        {
            var result = await HelperRequest.SendGetRequestAndParseJsonAsync<IEnumerable<WerelddeelDTO>>("api/werelddelen", httpClient);
            if (result.IsSuccessful)
            {
                Werelddelen = result.Value;
            }
            else 
            {
                Error = result.Error;
            }
        }
    }
}