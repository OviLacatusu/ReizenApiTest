@using Reizen.CommonClasses.DTOs
@using Microsoft.AspNetCore.Authorization

@page "/klants"

@inject IHttpClientFactory _httpFactory

@attribute [Authorize]

<PageTitle>Klanten</PageTitle>
<div class="container">
    <h1>Hello, clients!</h1>
    @if (Klanten_ != null)
    {
        @foreach (var klant in Klanten_)
        {
            <p>@klant.Familienaam @klant.Voornaam @klant.Id</p>
        }
    }
    else
    {
        <p>Waiting for data...</p>
    }
    @if (!String.IsNullOrEmpty(Error))
    {
        <div class="alert alert-danger">@Error</div>
    }
</div>
@code
{
    private IEnumerable<KlantDTO>? Klanten_;

    private string Error { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var httpClient = _httpFactory.CreateClient();

        var result = await HelperRequest.SendGetRequestAndParseJsonAsync<IEnumerable<KlantDTO>>($"api/klanten", httpClient);
        if (result.IsSuccessful)
        {
            Klanten_ = result.Value;
        }
        else
        {
            Error = result.Error;
        }
    }
}
