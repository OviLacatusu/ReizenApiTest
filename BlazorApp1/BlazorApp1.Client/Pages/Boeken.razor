@using Microsoft.AspNetCore.Authorization
@using Reizen.Domain.Models

@page "/boeken/{ReisId}/{KlantId}"

@inject ILogger<Boeken> _logger;
@inject IHttpClientFactory _httpFactory

@rendermode InteractiveServer

<h2>Reis</h2>
<p style="font:bold">Bestemming</p>
<p>@Reis.Bestemming</p>

<p style="font:bold">Vertrek</p>
<p>@Reis.Vertrek</p>

<p style="font:bold">Aantal dagen</p>
<p>@Reis.AantalDagen</p>

<p style="font:bold">Prijs per persoon</p>
<p>@Reis.PrijsPerPersoon</p>

<h2>Klant</h2>
<p>@($"{Klant.Voornaam} {Klant.Familienaam}")</p>
<p>@Klant.Adres</p>

<h2>Boeking</h2>
<label for="aantalV">Aantal volwassenen</label>
<InputText id="aantalV"></InputText>

<label for="aantalK">Aantal kinderen</label>
<InputText id="aantalK"></InputText>

<InputCheckbox id="annulatieV"></InputCheckbox>
<label>Annulatie verzekering</label>

<button class="btn btn-primary">Boeken</button>

@code 
{
    [Parameter]
    public int ReisId { get; init; }

    [Parameter]
    public int KlantId { get; init; }

    private KlantDTO? Klant { get; set; }

    private ReisDTO? Reis { get; set; }

    private BoekingDTO? Boeking { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (ReisId > 0) 
        {
            using (var httpClient = _httpFactory.CreateClient()) {

                Reis = await httpClient.GetFromJsonAsync<ReisDTO?>($"/api/reizen/{ReisId}");
            }
        }
        if (KlantId > 0)
        { 
            using (var httpClient = _httpFactory.CreateClient()) 
            {
                Klant = await httpClient.GetFromJsonAsync<KlantDTO?>($"/api/klanten/{KlantId}");
            }
        }
    }
}
