@using Microsoft.AspNetCore.Authorization
@using Reizen.Domain.Models
@using System.Text.Json;
@using Reizen.Domain.DTOs

@page "/boeken/{ReisId:int}/{KlantId:int}"

@inject ILogger<Boeken> _logger;
@inject IHttpClientFactory _httpFactory

@rendermode InteractiveServer
@if (Reis is not null && Klant is not null)
{
    <h2>Reis</h2>
    <p style="font:bold">Bestemming</p>
    <p>@Reis.Bestemming.Plaats</p>

    <p style="font:bold">Vertrek</p>
    <p>@Reis.Vertrek</p>

    <p style="font:bold">Aantal dagen</p>
    <p>@Reis.AantalDagen</p>

    <p style="font:bold">Prijs per persoon</p>
    <p>@Reis.PrijsPerPersoon</p>

    <h2>Klant</h2>
    <p>@($"{Klant.Voornaam} {Klant.Familienaam}")</p>
    <p>@Klant.Adres</p>

    <h2>Boeking</h2>
    <label for="aantalV">Aantal volwassenen</label>
    <InputNumber @bind-Value="Boeking.AantalVolwassenen" id="aantalV"></InputNumber>

    <label for="aantalK">Aantal kinderen</label>
    <InputNumber @bind-Value="Boeking.AantalKinderen" id="aantalK"></InputNumber>

    <InputCheckbox id="annulatieV" @bind-Value="Boeking.AnnulatieVerzekering"></InputCheckbox>
    <label>Annulatie verzekering</label>

    <button class="btn btn-primary">Boeken</button>
} else 
{
    <p>Waiting for data</p>
}
@code 
{
    [Parameter]
    public int ReisId { get; init; }

    [Parameter]
    public int KlantId { get; init; }

    private KlantDTO? Klant { get; set; }

    private ReisDTO? Reis { get; set; }

    private BoekingDTO? Boeking { get; set; } = new BoekingDTO();

    protected override async Task OnInitializedAsync()
    {
        if (ReisId > 0) 
        {
            using (var httpClient = _httpFactory.CreateClient()) {

                Reis = await httpClient.GetFromJsonAsync<ReisDTO?>($"/api/reizen/{ReisId}");
            }
        }
        if (KlantId > 0)
        { 
            using (var httpClient = _httpFactory.CreateClient()) 
            {
                Klant = await httpClient.GetFromJsonAsync<KlantDTO?>($"/api/klanten/{KlantId}");
            }
        }
    }

    private async Task AddNewBooking() 
    {
        using (var client = _httpFactory.CreateClient()) 
        { 
            var httpContent = new StringContent(JsonSerializer.Serialize<BoekingDTO>(Boeking));
            // POST request
            var response = await client.PostAsync($"/api/boekingen", httpContent);
            if (response is not null) 
            { 
                
            }
        }
    }
}
