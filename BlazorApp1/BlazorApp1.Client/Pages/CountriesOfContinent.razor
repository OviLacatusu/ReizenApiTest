@using Reizen.CommonClasses.DTOs
@using Microsoft.AspNetCore.Authorization

@page "/CountriesOfContinent/{Name}"

@inject IHttpClientFactory _httpFactory
@inject ILogger<CountriesOfContinent> _logger

<div class="container">
    <h2>Choose the country:</h2>
@if (Countries != null)
{
    <ul>
        @foreach (var Country in Countries)
        {
            <li><a href="/@Country.Name/Destinations">@Country.Name </a></li>
        }
    </ul>
}
else
{
    <p>Waiting for data...</p>
}
@if (!String.IsNullOrEmpty(Error))
{
    <div class="alert alert-danger">@Error</div>
}
</div>

@code {
    [Parameter]
    public string? Name { get; set; }

    private IEnumerable<CountryDTO>? Countries;

    private string? Error { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!String.IsNullOrEmpty(Name))
        {
            using var httpClient = _httpFactory.CreateClient();

            var result = await HelperRequest.SendGetRequestAndParseJsonAsync<IEnumerable<CountryDTO>>($"api/Countries/{Name}", httpClient);
            if (result.IsSuccessful)
            {
                Countries = result.Value;
            }
            else
            {
                Error = result.Error;
            }
        }
    }
}
